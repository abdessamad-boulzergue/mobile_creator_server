version: '3.3'

services:

  mobile-creator:
    image: creator/mobile-creator-server:latest
    restart: on-failure
    ports:
      - "8081:8080"
    networks:
      - creator_server_network
    volumes:
      - creator_resources:/var/lib/creator_server
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://creator-server-creator_mysql_database-1:3306/db?allowPublicKeyRetrieval=true&useSSL=false
      spring.data.mongodb.uri: mongodb://root:example@mongo:27017/
  creator_mysql_database:
    image: mysql
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'user'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'root'
    networks:
      - creator_server_network
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - creator_mysql_vm:/var/lib/mysql
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_DATABASE: mongo
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - creator_server_network
    ports:
      - 27017:27017
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 7071:8081
    networks:
      - creator_server_network
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
volumes:
  creator_mysql_vm:
  creator_resources:
networks:
  creator_server_network: